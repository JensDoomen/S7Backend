name: Back-end CI
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'S7Backend/S7Backend'
    name: Collection-build
    steps:
      - uses: actions/checkout@v2
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0' # Check for latest at link at .NET 5 download page
      - run: dotnet build
      - run: dotnet test
      
  # Deckbuilder-build:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: 'CardCollector.Net6/CardCollector.Net6'
  #   name: Deckbuilder-build
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Setup dotnet
  #       uses: actions/setup-dotnet@v1
  #       with:
  #         dotnet-version: '6.0' # Check for latest at link at .NET 5 download page
  #     - run: dotnet build
  #     - run: dotnet test
  
  # Merge-build:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: 'CardCollector.Net6/CardCollector.Net6'
  #   name: Merge-build
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Setup dotnet
  #       uses: actions/setup-dotnet@v1
  #       with:
  #         dotnet-version: '6.0' # Check for latest at link at .NET 5 download page
  #     - run: dotnet build
  #     - run: dotnet test
      
  # Shop-build:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: 'CardCollector.Net6/CardCollector.Net6'
  #   name: Shop-build
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Setup dotnet
  #       uses: actions/setup-dotnet@v1
  #       with:
  #         dotnet-version: '6.0' # Check for latest at link at .NET 5 download page
  #     - run: dotnet build
  #     - run: dotnet test
  

  docker:
     runs-on: ubuntu-latest
     needs: build
     defaults:
       run:
         working-directory: 'S7Backend'
     steps:
       -
         name: Set up QEMU
         uses: docker/setup-qemu-action@v1
       -
         name: Set up Docker Buildx
         uses: docker/setup-buildx-action@v1
       -
         name: Login to DockerHub
         uses: docker/login-action@v1 
         with:
           username: ${{ secrets.DOCKER_USERNAME }}
           password: ${{ secrets.DOCKER_PASSWORD }}
       -
         name: Build and push
         id: docker_build
         uses: docker/build-push-action@v2
         with:
           # file: ./CardCollector.Net6/CardCollector.Net6/Dockerfile
           file: ./
           push: true
           tags: jensdoomen/s7_backend:latest
           
  # docker-deckbuilder:
  #    runs-on: ubuntu-latest
  #    needs: Deckbuilder-build
  #    defaults:
  #      run:
  #        working-directory: 'Deckbuilder'
  #    steps:
  #      -
  #        name: Set up QEMU
  #        uses: docker/setup-qemu-action@v1
  #      -
  #        name: Set up Docker Buildx
  #        uses: docker/setup-buildx-action@v1
  #      -
  #        name: Login to DockerHub
  #        uses: docker/login-action@v1 
  #        with:
  #          username: ${{ secrets.DOCKER_USERNAME }}
  #          password: ${{ secrets.DOCKER_PASSWORD }}
  #      -
  #        name: Build and push
  #        id: docker_build
  #        uses: docker/build-push-action@v2
  #        with:
  #          file: ./CardCollector.Net6/Deckbuilder/Dockerfile
  #          push: true
  #          tags: jensdoomen/s6_deckbuilder:latest

  # docker-merge:
  #    runs-on: ubuntu-latest
  #    needs: Merge-build
  #    defaults:
  #      run:
  #        working-directory: 'Merge'
  #    steps:
  #      -
  #        name: Set up QEMU
  #        uses: docker/setup-qemu-action@v1
  #      -
  #        name: Set up Docker Buildx
  #        uses: docker/setup-buildx-action@v1
  #      -
  #        name: Login to DockerHub
  #        uses: docker/login-action@v1 
  #        with:
  #          username: ${{ secrets.DOCKER_USERNAME }}
  #          password: ${{ secrets.DOCKER_PASSWORD }}
  #      -
  #        name: Build and push
  #        id: docker_build
  #        uses: docker/build-push-action@v2
  #        with:
  #          file: ./CardCollector.Net6/Merge/Dockerfile
  #          push: true
  #          tags: jensdoomen/s6_merge:latest
       
  # docker-Shop:
  #    runs-on: ubuntu-latest
  #    needs: Shop-build
  #    defaults:
  #      run:
  #        working-directory: 'Shop'
  #    steps:
  #      -
  #        name: Set up QEMU
  #        uses: docker/setup-qemu-action@v1
  #      -
  #        name: Set up Docker Buildx
  #        uses: docker/setup-buildx-action@v1
  #      -
  #        name: Login to DockerHub
  #        uses: docker/login-action@v1 
  #        with:
  #          username: ${{ secrets.DOCKER_USERNAME }}
  #          password: ${{ secrets.DOCKER_PASSWORD }}
  #      -
  #        name: Build and push
  #        id: docker_build
  #        uses: docker/build-push-action@v2
  #        with:
  #          file: ./CardCollector.Net6/Shop/Dockerfile
  #          push: true
  #          tags: jensdoomen/s6_shop:latest

  # docker-Gateway:
  #    runs-on: ubuntu-latest
  #    defaults:
  #      run:
  #        working-directory: 'OcelotAPIGateway'
  #    steps:
  #      -
  #        name: Set up QEMU
  #        uses: docker/setup-qemu-action@v1
  #      -
  #        name: Set up Docker Buildx
  #        uses: docker/setup-buildx-action@v1
  #      -
  #        name: Login to DockerHub
  #        uses: docker/login-action@v1 
  #        with:
  #          username: ${{ secrets.DOCKER_USERNAME }}
  #          password: ${{ secrets.DOCKER_PASSWORD }}
  #      -
  #        name: Build and push
  #        id: docker_build
  #        uses: docker/build-push-action@v2
  #        with:
  #          file: ./CardCollector.Net6/OcelotAPIGateway/Dockerfile
  #          push: true
  #          tags: jensdoomen/s6_be:latest
      
  name: SonarCloud
  on:
    push:
      branches:
        - main
    pull_request:
      types: [opened, synchronize, reopened]
  jobs:
    build:
      name: Build and analyze
      runs-on: windows-latest
      steps:
        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: 17
            distribution: 'zulu' # Alternative distribution options are available.
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
        - name: Cache SonarCloud packages
          uses: actions/cache@v3
          with:
            path: ~\sonar\cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
        - name: Cache SonarCloud scanner
          id: cache-sonar-scanner
          uses: actions/cache@v3
          with:
            path: .\.sonar\scanner
            key: ${{ runner.os }}-sonar-scanner
            restore-keys: ${{ runner.os }}-sonar-scanner
        - name: Install SonarCloud scanner
          if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
          shell: powershell
          run: |
            New-Item -Path .\.sonar\scanner -ItemType Directory
            dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
        - name: Build and analyze
          env:
            GITHUB_TOKEN: ${{ secrets.TOKEN }}  # Needed to get PR information, if any
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          shell: powershell
          run: |
            .\.sonar\scanner\dotnet-sonarscanner begin /k:"JensDoomen_S7Backend" /o:"jensdoomen" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
            Dotnet build ./S7Backend
            .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
